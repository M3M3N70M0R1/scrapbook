javascript: var userDepth=prompt("Going to scrape the site for URL. How deep should I look?");(!(userDepth=Number(userDepth))||isNaN(userDepth)||userDepth>10)&&(userDepth=2);const MAX_CONCURRENT=5,MAX_RETRIES=3,domain=location.hostname,seen=new Set,emails=new Map,phones=new Map,patterns={email:/\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-z]{2,}\b/g,phone:/(?:\+|00)?[\d\s\-().]{8,30}/g};var win=window.open("","_blank"),doc=win.document;doc.open(),doc.write("<!DOCTYPE html><html><head><title>Initializing...</title></head><body></body></html>"),doc.close(),doc.title=`Results for ${domain}`;const style=doc.createElement("style");style.textContent="\n  body { background-color: #0d0d0d; color: #33ff33; font-family: 'Courier New', Courier, monospace; margin: 0; padding: 20px; }\n  h1 { text-align: center; color: #00ff00; }\n  .timestamp { text-align: center; margin-bottom: 10px; color: #999; }\n  .progress { text-align: center; margin: 10px 0; font-size: 14px; }\n  .loader { border: 6px solid #222; border-top: 6px solid #33ff33; border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite; margin: 10px auto; }\n  @keyframes spin { 100% { transform: rotate(360deg); } }\n  table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n  th, td { border-bottom: 1px solid #222; padding: 6px; }\n  th { color: #66ff66; }\n  td a { color: #00ccff; text-decoration: none; }\n  .faded { opacity: 0.5; }\n  .actions { display:flex; justify-content:center; gap:10px; margin-top:20px; }\n  .actions button { background:#111; color:#33ff33; border:1px solid #33ff33; padding:8px 16px; cursor:pointer; border-radius:6px; font-size:14px; }\n  .actions button:hover { background:#33ff33; color:#000; box-shadow:0 0 8px #33ff33; }\n",doc.head.appendChild(style);const h1=doc.createElement("h1");h1.textContent=`Results for ${domain}`,doc.body.appendChild(h1);const timestampDiv=doc.createElement("div");timestampDiv.className="timestamp",timestampDiv.textContent=`Started on ${(new Date).toLocaleString()}`,doc.body.appendChild(timestampDiv);const progressDiv=doc.createElement("div");progressDiv.className="progress",progressDiv.id="progress",progressDiv.textContent="Scanning 0 / ? pages...",doc.body.appendChild(progressDiv);const loaderDiv=doc.createElement("div");function createTable(e,t){const n=doc.createElement("h2");n.textContent=e,doc.body.appendChild(n);const o=doc.createElement("table"),a=doc.createElement("thead");a.innerHTML=`<tr><th>${e.includes("Email")?"Email":"Phone"}</th><th>Source URL</th></tr>`,o.appendChild(a);const r=doc.createElement("tbody");r.id=t;const l=doc.createElement("tr");l.innerHTML='<td colspan="2" class="faded">Waiting for results...</td>',r.appendChild(l),o.appendChild(r),doc.body.appendChild(o)}loaderDiv.className="loader",loaderDiv.id="loader",doc.body.appendChild(loaderDiv),createTable("üìß Emails","emailBody"),createTable("üìû Phone Numbers","phoneBody");const script=doc.createElement("script");function storeAndUpdate(e,t,n,o){const a=doc.getElementById(o+"Body"),r=a.querySelector(".faded");if(e&&0!==e.length)for(let l of e){const e=l.trim();if("phone"===o){const t=e.replace(/\D/g,"");if(t.length<8||t.length>15)continue}const i=e+"|"+t;if(!n.has(i)){n.set(i,{value:e,url:t}),r&&r.remove();const o=doc.createElement("tr");o.innerHTML=`<td>${e}</td><td><a href="${t}" target="_blank">${t}</a></td>`,a.appendChild(o)}}else r&&(r.style.opacity="1",r.textContent="No results")}async function fetchAndScan(e,t,n){if(!seen.has(e)){seen.add(e);try{const t=await fetch(e),n=(await t.text()).replace(/\u00A0/g," ");storeAndUpdate(n.match(patterns.email),e,emails,"email"),storeAndUpdate(n.match(patterns.phone),e,phones,"phone")}catch(t){console.warn("Failed to fetch:",e,t)}finally{n.textContent=`Scanning ${seen.size} / ${t} pages...`}}}function getLinks(){var e=location.hostname,t=new Set,n=new Set,o=userDepth;return async function a(r,l){if(!(l>o||t.has(r))){t.add(r);try{for(var i=await fetch(r),c=await i.text(),s=(new DOMParser).parseFromString(c,"text/html").querySelectorAll("a"),d=[],p=0;p<s.length;p++)try{var h=new URL(s[p].href,r);h.hash="",-1===(h=h.href.replace(/\/+$/,"").toLowerCase()).indexOf(e)||t.has(h)||(n.add(h),d.push(a(h,l+1)))}catch(e){}await Promise.all(d)}catch(e){console.warn("Failed to fetch:",r,e)}}}(location.href,0).then((()=>Array.from(n)))}async function run(e){const t=e.length,n=doc.getElementById("progress"),o=[...e];async function a(){for(;o.length>0;){const e=o.shift();if(!e)break;await fetchAndScan(e,t,n)}}const r=[];for(let e=0;e<MAX_CONCURRENT;e++)r.push(a());await Promise.all(r),n.textContent=`‚úÖ Finished scanning ${t} pages.`;const l=doc.getElementById("loader");l&&(l.style.display="none");const i=doc.createElement("div");i.className="actions",i.innerHTML='\n    <button onclick="window.exportPDF()">‚¨áÔ∏è PDF</button>\n    <button onclick="window.exportCSV()">‚¨áÔ∏è CSV</button>\n    <button onclick="window.exportJSON()">‚¨áÔ∏è JSON</button>\n  ',l.insertAdjacentElement("afterend",i)}async function startScraping(){const e=await getLinks();doc.getElementById("progress").textContent=`Scanning 0 / ${e.length} pages...`,await run(e),console.log("‚úÖ Done scanning.")}script.textContent=`\n  // Define domain inside the new window\n  const domain = "${domain}";\n\n  // Export to HTML/PDF\n  window.exportPDF = function() {\n    const emailTable = document.getElementById("emailBody");\n    const phoneTable = document.getElementById("phoneBody");\n    const htmlContent = "<!DOCTYPE html><html><head><meta charset='UTF-8'><title>Results for "+domain+"</title><style>body{font-family:Arial,sans-serif;padding:20px;}h1,h2{color:#333;}table{border-collapse:collapse;width:100%;margin-bottom:20px;}th,td{border:1px solid #ccc;padding:6px;text-align:left;}th{background:#f0f0f0;}</style></head><body><h1>Results for "+domain+"</h1><h2>üìß Emails</h2>"+(emailTable?emailTable.outerHTML:"<tr><td>No results</td></tr>")+"<h2>üìû Phones</h2>"+(phoneTable?phoneTable.outerHTML:"<tr><td>No results</td></tr>")+"</body></html>";\n    const blob = new Blob([htmlContent], {type:"text/html"});\n    const a = document.createElement("a");\n    a.href = URL.createObjectURL(blob);\n    a.download = \`results-\${domain}.html\`;\n    a.click();\n  };\n\n  // Export to CSV\n  window.exportCSV = function() {\n    let rows = [["Type","Value","Source URL"]];\n    [...document.querySelectorAll("#emailBody tr")].forEach(tr=>{\n      if(tr.cells.length>=2) rows.push(["Email",tr.cells[0].innerText,tr.cells[1].innerText]);\n    });\n    [...document.querySelectorAll("#phoneBody tr")].forEach(tr=>{\n      if(tr.cells.length>=2) rows.push(["Phone",tr.cells[0].innerText,tr.cells[1].innerText]);\n    });\n    let csv = rows.map(r=>r.map(v=>'"'+v.replace(/"/g,'""')+'"').join(",")).join("\\n");\n    let blob = new Blob([csv],{type:"text/csv"});\n    let a = document.createElement("a");\n    a.href = URL.createObjectURL(blob);\n    a.download = \`results-\${domain}.csv\`;\n    a.click();\n  };\n\n  // Export to JSON\n  window.exportJSON = function() {\n    let data = {emails:[],phones:[]};\n    [...document.querySelectorAll("#emailBody tr")].forEach(tr=>{\n      if(tr.cells.length>=2) data.emails.push({email:tr.cells[0].innerText,url:tr.cells[1].innerText});\n    });\n    [...document.querySelectorAll("#phoneBody tr")].forEach(tr=>{\n      if(tr.cells.length>=2) data.phones.push({phone:tr.cells[0].innerText,url:tr.cells[1].innerText});\n    });\n    let blob = new Blob([JSON.stringify(data,null,2)],{type:"application/json"});\n    let a = document.createElement("a");\n    a.href = URL.createObjectURL(blob);\n    a.download = \`results-\${domain}.json\`;\n    a.click();\n  };\n`,doc.body.appendChild(script),startScraping();